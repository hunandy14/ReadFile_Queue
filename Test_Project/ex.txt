#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;

struct Node{
	int num;
	Node *next=NULL;
};
int gr[1000005];//group everyone at
Node *l[1005]={NULL};//the last person of the group in line

#ifndef CCC
int main22222(){
//#ifndef ONLINE_JUDGE

	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);

//#endif
	int N,K,p,cnt=1;
	char dir[20];
	Node *head,*last,*cur=NULL;
	Node *newNode=NULL;
	while(scanf(" %d",&N)!=EOF){
		memset(gr,-1,sizeof(gr));
		head=NULL,last=NULL;
		for(int i=0;i<1005;++i) l[i]=NULL;
		printf("Line #%d\n",cnt++);
		for(int i=0;i<N;++i){
			scanf(" %d",&K);
			for(int j=0;j<K;++j){
				scanf(" %d",&p);
				gr[p]=i;
			}
		}
		//case
		while(scanf(" %s",dir)&&dir[0]!='S'){
			if(dir[0]=='E'){//cut in line
				scanf(" %d",&p);
				if(head==NULL){//when no one in line
					head=new Node,head->num=p,last=head;
					if(gr[p]!=-1) l[gr[p]]=head;
					continue;
				}
				newNode=new Node,newNode->num=p;
				if(gr[p]==-1)//p is alone
					last->next=newNode,last=newNode;
				else if(l[gr[p]]==NULL){//no friend in line
					last->next=newNode,last=newNode;
					l[gr[p]]=last;
				}
				else{//have friend in line
					Node *best=l[gr[p]];
					newNode->next=best->next;
					best->next=newNode;
					l[gr[p]]=newNode;
				}
			}
			else{//get prize
				printf("%d\n",head->num);//fflush(stdout);
				if(gr[head->num]!=-1&&l[gr[head->num]]==head)
					l[gr[head->num]]=NULL;
				cur=head,head=head->next;
				delete cur;
			}
		}
		while(head->next!=NULL){//clear the line
			cur=head,head=head->next;
			delete cur;
		}
		delete head;
	}
	return 0;
}
#endif